<?xml version="1.0"?>
<ruleset xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	name="Comment Hacks"
	xsi:noNamespaceSchemaLocation="./vendor/squizlabs/php_codesniffer/phpcs.xsd">

	<description>Comment Hacks rules for PHP_CodeSniffer</description>

	<!--
	#############################################################################
	COMMAND LINE ARGUMENTS
	https://github.com/squizlabs/PHP_CodeSniffer/wiki/Annotated-ruleset.xml
	#############################################################################
	-->

	<file>.</file>

	<!-- Check for cross-version support for PHP 7.4 and higher. -->
	<config name="testVersion" value="7.4-"/>
	<rule ref="PHPCompatibilityWP">
		<include-pattern>*\.php$</include-pattern>
	</rule>

	<!-- Only check PHP files. -->
	<arg name="extensions" value="php"/>

	<!-- Show progress, show the error codes for each message (source). -->
	<arg value="ps"/>

	<!-- Strip the filepaths down to the relevant bit. -->
	<arg name="basepath" value="./"/>

	<!-- Check up to 8 files simultaneously. -->
	<arg name="parallel" value="8"/>

	<!-- Cache the results between runs. -->
	<arg name="cache" value="./.cache/phpcs.cache"/>

	<!--
	#############################################################################
	USE THE YoastCS RULESET
	#############################################################################
	-->

	<rule ref="Yoast">
	    <exclude name="Yoast.Commenting.FileComment"/>
	    <exclude name="Squiz.Commenting.VariableComment.MissingVar"/>
		<properties>
			<!-- Set the custom test class whitelist for all sniffs which use it in one go.
				 Ref: https://github.com/WordPress-Coding-Standards/WordPress-Coding-Standards/wiki/Customizable-sniff-properties#custom-unit-test-classes
			-->
			<property name="custom_test_class_whitelist" type="array">
				<element value="EmiliaProjects\WP\Comment\Tests\TestCase"/>
			</property>

			<!-- Provide the plugin specific prefix for use with namespace and hook names. -->
			<property name="prefixes" type="array">
				<element value="EmiliaProjects\WP\Comment"/>
				<element value="comment_hacks"/>
			</property>
		</properties>
	</rule>


	<!--
	#############################################################################
	SNIFF SPECIFIC CONFIGURATION
	#############################################################################
	-->

	<!-- Verify that all gettext calls use the correct text domain. -->
	<rule ref="WordPress.WP.I18n">
		<properties>
			<property name="text_domain" type="array">
				<element value="comment-hacks"/>
				<element value="default"/>
			</property>
		</properties>
	</rule>

	<rule ref="Yoast.Files.FileName">
		<properties>
			<!-- Don't trigger on the main file as renaming it would deactivate the plugin. -->
			<property name="excluded_files_strict_check" type="array">
				<element value="comment-hacks.php"/>
			</property>

			<!-- Remove the following prefixes from the names of object structures. -->
			<property name="oo_prefixes" type="array">
				<element value="emiliaprojects_comment"/>
			</property>
		</properties>
	</rule>


	<!--
	#############################################################################
	SELECTIVE EXCLUSIONS
	Exclude specific files for specific sniffs and/or exclude sub-groups in sniffs.
	#############################################################################
	-->

	<rule ref="Yoast.Files.FileName.InvalidFunctionsFileName">
		<exclude-pattern>/tests/bootstrap\.php</exclude-pattern>
	</rule>

	<rule ref="PHPCompatibility">
	    <exclude name="PHPCompatibility.Classes.NewTypedProperties.Found"/>
		<exclude name="PHPCompatibility.FunctionDeclarations.NewReturnTypeDeclarations"/>
		<exclude name="PHPCompatibility.FunctionDeclarations.NewParamTypeDeclarations"/>
	</rule>

	<!--
	#############################################################################
	TEMPORARY ADJUSTMENTS
	Adjustments which should be removed once the associated issue has been resolved.
	#############################################################################
	-->

	<!-- Until all prefixes are fixed, some exceptions are allowed to the PrefixAllGlobals sniff. -->
	<rule ref="WordPress.NamingConventions.PrefixAllGlobals">
		<properties>
			<property name="prefixes" type="array" extend="true">
				<element value="epch_comment"/>
				<element value="EMILIA_COMMENT_HACKS"/>
			</property>
		</properties>
	</rule>

</ruleset>
